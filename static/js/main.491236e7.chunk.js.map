{"version":3,"sources":["serviceWorker.js","modules/tickets/constants/reducerConstants.js","global/constants/action-types.js","modules/tickets/reducers/createTicketReducer.js","modules/tickets/reducers/createPaymentTicketReducer.js","modules/tickets/reducers/ticketsTableReducer.js","modules/tickets/reducers/fetchTicketsReducer.js","modules/tickets/reducers/index.js","modules/ticketDetails/constants/reducerConstants.js","modules/ticketDetails/reducers/ticketDetailsReducer.js","modules/ticketDetails/reducers/index.js","modules/account/constants/reducerConstants.js","modules/account/reducers/profileModalReducer.js","modules/account/reducers/index.js","modules/accountDetails/constants/reducerConstants.js","modules/accountDetails/reducers/accountDetailsReducer.js","modules/accountDetails/reducers/index.js","global/reducers/index.js","global/configurations/app-store.js","modules/account/views/cards/Username.js","global/actions/StandardActions.js","modules/tickets/actions/fetchTicketsAction.js","modules/tickets/api/fetchTicketsAPI.js","modules/accountDetails/views/ProfileDetails.js","modules/account/views/modals/ProfileModal.js","modules/account/views/cards/AccountDropdownCard.js","global/navigation/SidebarButton.js","global/constants/routes.js","global/navigation/NavigationLinks.js","global/navigation/Sidebar.js","global/navigation/Backdrop.js","global/navigation/TopMenu.js","modules/accountDetails/views/AccountActivities.js","layouts/ProfileLayout.js","modules/tickets/constants/ticketConstants.js","global/utils/StringUpdates.js","modules/tickets/actions/create/createPaymentTicketDemoAction.js","modules/tickets/views/forms/create/Payments.js","modules/tickets/views/forms/create/Software.js","modules/tickets/views/forms/create/Create.js","modules/tickets/views/modals/CreateTicketModal.js","modules/tickets/views/cards/TicketTablePagination.js","modules/tickets/views/tables/TicketsTable.js","modules/tickets/views/cards/TicketSearch.js","layouts/TicketsLayout.js","layouts/ClientsLayout.js","layouts/InvoicesLayout.js","modules/ticketDetails/actions/ticketDetailsAction.js","modules/accountDetails/actions/accountDetailsAction.js","modules/accountDetails/constants/activityConstants.js","modules/ticketDetails/actions/fetchTicketDetailsAction.js","modules/tickets/actions/create/updateTicketAction.js","modules/ticketDetails/views/TicketDetails.js","layouts/TicketDetailsLayout.js","modules/authorization/views/Forms/AuthForm.js","modules/authorization/views/Forms/RegistrationForm.js","layouts/AuthorizationLayout.js","index.js"],"names":["Boolean","window","location","hostname","match","CREATE_TICKET_ACTION","CREATE_PAYMENT_TICKET_ACTION","CREATE_PAYMENT_TICKET_DEMO_ACTION","FETCH_TICKETS_ACTION","REORDER_TICKETS_ACTION","UPDATE_TICKET_ACTION","TICKET_TABLE_ACTION","FILTER_TABLE_ACTION","getAction","action","status","ACTION_STATUS_FAILED","ACTION_STATUS_START","ACTION_STATUS_SUCCESS","ACTION_STATUS_FORM_FIELD_CHANGE","ACTION_STATUS_FORM_CLEAR_ERRORS","ACTION_STATUS_RESET","initialState","modalIsOpen","ticketType","id","assignee","priority","ticketName","clientName","invoiceNumber","description","createdBy","createdAt","ticketNumber","assigneeError","priorityError","ticketNameError","clientNameError","invoiceNumberError","descriptionError","sortType","sortField","filterField","currentPage","data","isFetching","isLoaded","createTicket","state","type","payload","field","value","createPaymentTicketForm","ticketsTableData","tickets","map","item","ticketId","TICKET_DETAILS_ACTION","TICKET_DETAILS_CREATE_COMMENT_ACTION","FETCH_TICKET_DETAILS_ACTION","comments","ticketDetails","Date","length","datetime","text","updatedAt","OPEN_PROFILE_ACTION","profileModal","UPDATE_ACCOUNT_ACTIVITY_ACTION","userDetails","email","firstName","lastName","fullName","phoneNumber","photo","process","userActivities","dateTime","actionType","accountDetails","combineReducers","ticketReducers","ticketDetailsReducers","accountReducers","accountDetailsReducers","middleware","thunk","appStore","createStore","combinedReducers","composeWithDevTools","applyMiddleware","props","className","src","alt","fullname","reset","dispatch","changeField","clearErrors","fetchTicketsAction","fetch","method","headers","Accept","then","res","json","Error","catch","error","failed","ProfileDetails","this","filter","ticket","finishedTickets","countFinishedTickets","openTickets","countOpenTickets","React","Component","connect","bindActionCreators","ProfileModal","Modal","show","onHide","toggle","backdrop","centered","Container","Header","closeButton","Body","AccountDropdownCard","toggleModal","DropdownButton","alignRight","title","Username","Dropdown","Item","href","onClick","click","PROFILE_ROUTE","TICKETS_ROUTE","INVOICES_ROUTE","NavigationLinks","linkActive","link","hasOwnProperty","active","to","handleClose","TopMenu","useState","sidebar","setSidebar","SidebarButton","Sidebar","Backdrop","AccountActivities","sort","a","b","dateA","index","key","toLocaleString","ProfileLayout","Fragment","AVAILABLE_TICKET_TYPES","AVAILABLE_TICKET_PRIORITY_TYPES","AVAILABLE_TICKET_STATUS_TYPES","capitalizeFirstLetter","string","charAt","toUpperCase","slice","toLowerCase","countCharacters","replace","createPaymentTicketDemo","getState","form","currentTimeInMs","getTime","Math","round","createTicketDemo","Payments","handleFieldChange","validate","isValid","forEach","split","join","e","preventDefault","Form","Group","defaultValue","onChange","target","disabled","rows","Software","required","Create","renderSelection","renderTicketContent","CreateTicketModal","resetHandler","onExit","keyboard","Title","TicketTablePagination","pageChangeHandler","selected","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","forcePage","pageClassName","pageLinkClassName","nextClassName","previousClassName","nextLinkClassName","previousLinkClassName","TicketsTable","onSort","typeHandler","orderedData","_","orderBy","indexOf","includes","filteredData","getFilteredData","ceil","displayedData","chunk","iconType","Table","hover","striped","details","TicketSearch","placeholder","TicketsLayout","totalIssues","unsolvedIssues","countUnsolvedIssues","ClientsLayout","InvoicesLayout","addComment","comment","addAction","ADDED_COMMENT","fetchTicketDetails","updateTicket","updatedTicket","TicketDetails","saveComment","commentText","selectedTicket","viewProps","showButtonsOnHover","editOnViewClick","onSave","ref","TicketDetailsLayout","params","AuthForm","htmlFor","RegistrationForm","AuthorizationLayout","history","createBrowserHistory","Main","store","exact","path","render","authForm","component","HomeLayout","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.491236e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const CREATE_TICKET_ACTION = \"CREATE_TICKET\" ;\r\nexport const CREATE_PAYMENT_TICKET_ACTION = \"CREATE_PAYMENT_TICKET\" ;\r\nexport const CREATE_PAYMENT_TICKET_DEMO_ACTION = \"CREATE_PAYMENTS_TICKET_DEMO\" ;\r\n\r\nexport const FETCH_TICKETS_ACTION = \"FETCH_TICKETS\";\r\nexport const REORDER_TICKETS_ACTION = \"REORDER_TICKETS\";\r\nexport const UPDATE_TICKET_ACTION = \"UPDATE_TICKET\";\r\n\r\nexport const TICKET_TABLE_ACTION = \"TICKET_TABLE\";\r\nexport const FILTER_TABLE_ACTION = \"FILTER_TABLE\";\r\n","export function getAction(action, status = null) {\r\n    if(!status) {\r\n        return action;\r\n    }\r\n    return action+\"_\"+status;\r\n}\r\n\r\nexport const ACTION_STATUS_FAILED  = \"FAILED\";\r\nexport const ACTION_STATUS_START  = \"START\";\r\nexport const ACTION_STATUS_SUCCESS = \"SUCCESS\";\r\nexport const ACTION_STATUS_FORM_FIELD_CHANGE = \"FORM_FIELD_CHANGE\";\r\nexport const ACTION_STATUS_FORM_CLEAR_ERRORS = \"FORM_CLEAR_ERRORS\";\r\nexport const ACTION_STATUS_SET_ACTIVE = \"SET_ACTIVE\";\r\nexport const ACTION_STATUS_CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const ACTION_STATUS_RESET = \"ACTION_STATUS_RESET\";\r\n\r\n\r\n","import {CREATE_TICKET_ACTION} from \"../constants/reducerConstants\";\r\nimport {\r\n    ACTION_STATUS_FAILED,\r\n    ACTION_STATUS_FORM_FIELD_CHANGE, ACTION_STATUS_RESET,\r\n    ACTION_STATUS_START, ACTION_STATUS_SUCCESS,\r\n    getAction\r\n} from \"../../../global/constants/action-types\";\r\n\r\nconst initialState = {\r\n    modalIsOpen: null,\r\n    ticketType: null\r\n};\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case getAction(CREATE_TICKET_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value\r\n            };\r\n\r\n        case getAction(CREATE_TICKET_ACTION, ACTION_STATUS_RESET):\r\n            return initialState;\r\n\r\n        case getAction(CREATE_TICKET_ACTION, ACTION_STATUS_START):\r\n            return initialState;\r\n\r\n        case getAction(CREATE_TICKET_ACTION, ACTION_STATUS_SUCCESS):\r\n            return initialState;\r\n\r\n        case getAction(CREATE_TICKET_ACTION, ACTION_STATUS_FAILED):\r\n            return initialState;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {CREATE_PAYMENT_TICKET_ACTION} from \"../constants/reducerConstants\";\r\nimport {\r\n    ACTION_STATUS_FORM_CLEAR_ERRORS,\r\n    ACTION_STATUS_FORM_FIELD_CHANGE, ACTION_STATUS_RESET,\r\n    ACTION_STATUS_SUCCESS,\r\n    getAction\r\n} from \"../../../global/constants/action-types\";\r\n\r\nconst initialState = {\r\n    id: \"\",\r\n    assignee: \"\",\r\n    priority: \"\",\r\n    ticketName: \"\",\r\n    clientName: \"\",\r\n    invoiceNumber: \"\",\r\n    description: \"\",\r\n    createdBy: \"Vladislav Lahtarin\",\r\n    createdAt: null,\r\n    status: \"Open\",\r\n    ticketNumber: null,\r\n    assigneeError: null,\r\n    priorityError: null,\r\n    ticketNameError: null,\r\n    clientNameError: null,\r\n    invoiceNumberError: null,\r\n    descriptionError: null,\r\n\r\n};\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case getAction(CREATE_PAYMENT_TICKET_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value,\r\n            };\r\n        case getAction(CREATE_PAYMENT_TICKET_ACTION, ACTION_STATUS_FORM_CLEAR_ERRORS): {\r\n            return {\r\n                ...state,\r\n                assigneeError: null,\r\n                priorityError: null,\r\n                ticketNameError: null,\r\n                clientNameError: null,\r\n                invoiceNumberError: null,\r\n                descriptionError: null,\r\n            }\r\n        }\r\n        case getAction(CREATE_PAYMENT_TICKET_ACTION, ACTION_STATUS_RESET):\r\n            return initialState;\r\n        case getAction(CREATE_PAYMENT_TICKET_ACTION, ACTION_STATUS_SUCCESS):\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {ACTION_STATUS_FORM_FIELD_CHANGE, ACTION_STATUS_RESET, getAction} from \"../../../global/constants/action-types\";\r\nimport {TICKET_TABLE_ACTION, FILTER_TABLE_ACTION} from \"../constants/reducerConstants\";\r\n\r\nconst initialState = {\r\n    sortType: \"desc\",\r\n    sortField: \"ticketNumber\",\r\n    filterField: null,\r\n    currentPage: 0,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case getAction(TICKET_TABLE_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value\r\n            };\r\n        case getAction(FILTER_TABLE_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value,\r\n                currentPage: 0\r\n            };\r\n        case getAction(TICKET_TABLE_ACTION, ACTION_STATUS_RESET):\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ACTION_STATUS_FAILED, ACTION_STATUS_FORM_FIELD_CHANGE,\r\n    ACTION_STATUS_START,\r\n    ACTION_STATUS_SUCCESS,\r\n    getAction\r\n} from \"../../../global/constants/action-types\";\r\nimport {\r\n    CREATE_PAYMENT_TICKET_DEMO_ACTION,\r\n    FETCH_TICKETS_ACTION,\r\n    REORDER_TICKETS_ACTION, UPDATE_TICKET_ACTION,\r\n} from \"../constants/reducerConstants\";\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isFetching: false,\r\n    isLoaded: false,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case getAction(FETCH_TICKETS_ACTION, ACTION_STATUS_START):\r\n            return {\r\n                ...state,\r\n                data: [],\r\n                isFetching: true,\r\n                isLoaded: false\r\n            };\r\n        case getAction(FETCH_TICKETS_ACTION, ACTION_STATUS_SUCCESS):\r\n            return {\r\n                ...state,\r\n                data: action.payload !== null ? action.payload : [],\r\n                isFetching: false,\r\n                isLoaded: true\r\n            };\r\n        case getAction(FETCH_TICKETS_ACTION, ACTION_STATUS_FAILED):\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isLoaded: true\r\n            };\r\n        case getAction(REORDER_TICKETS_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value\r\n            };\r\n        case CREATE_PAYMENT_TICKET_DEMO_ACTION:\r\n            return {\r\n                ...state,\r\n                data: [...state.data, action.payload]\r\n            };\r\n        case UPDATE_TICKET_ACTION:\r\n            return {\r\n                ...state,\r\n                data: state.data.map((item) => {\r\n                    if (item.id === action.payload.ticketId) {\r\n                        return {\r\n                            ...item,\r\n                            [action.payload.field]: action.payload.value\r\n                        }\r\n                    }\r\n                    return item;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import createTicketReducer from \"./createTicketReducer\";\r\nimport createPaymentTicketReducer from \"./createPaymentTicketReducer\";\r\nimport ticketsTableReducer from \"./ticketsTableReducer\";\r\nimport fetchTicketsReducer from \"./fetchTicketsReducer\";\r\n\r\n\r\nexport default {\r\n    createTicket: createTicketReducer,\r\n    createPaymentTicketForm: createPaymentTicketReducer,\r\n    ticketsTableData : ticketsTableReducer,\r\n    tickets: fetchTicketsReducer\r\n    \r\n};\r\n","export const TICKET_DETAILS_ACTION = \"TICKET_DETAILS\";\r\nexport const TICKET_DETAILS_CREATE_COMMENT_ACTION = \"TICKET_DETAILS_CREATE_COMMENT\";\r\nexport const FETCH_TICKET_DETAILS_ACTION = \"FETCH_TICKET_DETAILS\";","import {ACTION_STATUS_FORM_FIELD_CHANGE, ACTION_STATUS_RESET, getAction} from \"../../../global/constants/action-types\";\r\nimport {\r\n    TICKET_DETAILS_CREATE_COMMENT_ACTION,\r\n    TICKET_DETAILS_ACTION,\r\n    FETCH_TICKET_DETAILS_ACTION\r\n} from \"../constants/reducerConstants\";\r\n\r\nconst initialState = {\r\n    id: \"\",\r\n    type: \"\",\r\n    assignee: \"\",\r\n    priority: \"\",\r\n    ticketName: \"\",\r\n    clientName: \"\",\r\n    invoiceNumber: \"\",\r\n    description: \"\",\r\n    createdBy: \"\",\r\n    createdAt: \"\",\r\n    status: \"\",\r\n    ticketNumber: \"\",\r\n    comments: [],\r\n    isLoaded: false\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_TICKET_DETAILS_ACTION :\r\n            return {\r\n                ...state,\r\n                id: action.payload ? action.payload.id : \"\",\r\n                type: action.payload ? action.payload.type : \"\",\r\n                assignee: action.payload ? action.payload.assignee : \"\",\r\n                priority: action.payload ? action.payload.priority : \"\",\r\n                ticketName: action.payload ? action.payload.ticketName : \"\",\r\n                clientName: action.payload ? action.payload.clientName : \"\",\r\n                invoiceNumber: action.payload ? action.payload.invoiceNumber : \"\",\r\n                description: action.payload ? action.payload.description : \"\",\r\n                createdBy: action.payload ? action.payload.createdBy : \"\",\r\n                createdAt: action.payload ? action.payload.createdAt : \"\",\r\n                status: action.payload ? action.payload.status : \"\",\r\n                ticketNumber: action.payload ? action.payload.ticketNumber : \"\",\r\n                comments: action.payload && action.payload.comments ? action.payload.comments : [],\r\n                isLoaded: true\r\n            };\r\n\r\n        case getAction(TICKET_DETAILS_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value,\r\n                updatedAt: new Date()\r\n\r\n            };\r\n\r\n        case TICKET_DETAILS_CREATE_COMMENT_ACTION:\r\n            if (action.payload.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    comments: [...state.comments,\r\n                        {\r\n                            datetime: new Date(),\r\n                            text: action.payload\r\n                        }\r\n                    ],\r\n                    updatedAt: new Date()\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n        case getAction(TICKET_DETAILS_ACTION, ACTION_STATUS_RESET):\r\n            return initialState;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import ticketDetailsReducer from \"./ticketDetailsReducer\";\r\n\r\nexport default {\r\n    ticketDetails: ticketDetailsReducer\r\n}\r\n\r\n\r\n","export const OPEN_PROFILE_ACTION = \"OPEN_PROFILE\";","import {OPEN_PROFILE_ACTION} from \"../constants/reducerConstants\";\r\nimport {ACTION_STATUS_FORM_FIELD_CHANGE, getAction} from \"../../../global/constants/action-types\";\r\n\r\nconst initialState = {\r\n    modalIsOpen: false\r\n};\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case getAction(OPEN_PROFILE_ACTION, ACTION_STATUS_FORM_FIELD_CHANGE):\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import profileModalReducer from \"./profileModalReducer\";\r\n\r\nexport default {\r\n    profileModal: profileModalReducer\r\n};\r\n","export const UPDATE_ACCOUNT_ACTIVITY_ACTION = \"CREATE_ACCOUNT_DETAILS\";","import {UPDATE_ACCOUNT_ACTIVITY_ACTION} from \"../constants/reducerConstants\";\r\n\r\nconst initialState = {\r\n    userDetails: {\r\n        id: null,\r\n        email: \"vlad.laht@gmail.com\",\r\n        firstName: \"Vladislav\",\r\n        lastName: \"Lahtarin\",\r\n        fullName: \"Vladislav Lahtarin\",\r\n        phoneNumber: \"+372 55667788\",\r\n        location: \"Tallinn, EE\",\r\n        photo: `${process.env.PUBLIC_URL}/img/profile_photo.png`\r\n    },\r\n    userActivities: [\r\n        {\r\n            dateTime: \"Sep 1 2020 00:02:48 GMT+0300\",\r\n            actionType: \"edited ticket\",\r\n            ticketNumber: \"5ec1e2852e54c7392692457c\"\r\n        },\r\n        {\r\n            dateTime: \"May 3 2020 00:02:48 GMT+0300\",\r\n            actionType: \"edited ticket\",\r\n            ticketNumber: \"5ec1e2d82e54c7392692457d\"\r\n        },\r\n        {\r\n            dateTime: \"Oct 4 2020 00:02:48 GMT+0300\",\r\n            actionType: \"edited ticket\",\r\n            ticketNumber: \"5ec27aabd159332e5bc2cd4d\"\r\n        },\r\n        {\r\n            dateTime: \"Jun 6 2020 00:02:48 GMT+0300\",\r\n            actionType: \"created ticket\",\r\n            ticketNumber: \"5ec27a73d159332e5bc2cd49\"\r\n        }\r\n    ],\r\n};\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_ACCOUNT_ACTIVITY_ACTION:\r\n            return {\r\n                ...state,\r\n                userActivities: [...state.userActivities,\r\n                    {\r\n                        dateTime: new Date(),\r\n                        actionType: action.payload.actionType,\r\n                        ticketNumber: action.payload.ticketNumber\r\n                    }]\r\n            }\r\n                ;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import accountDetailsReducer from \"./accountDetailsReducer\";\r\n\r\nexport default {\r\n    accountDetails: accountDetailsReducer\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport ticketReducers from \"../../modules/tickets/reducers\";\r\nimport ticketDetailsReducers from \"../../modules/ticketDetails/reducers\";\r\nimport accountReducers from \"../../modules/account/reducers\";\r\nimport accountDetailsReducers from \"../../modules/accountDetails/reducers\";\r\n\r\nexport default combineReducers({\r\n   ...ticketReducers,\r\n   ...ticketDetailsReducers,\r\n   ...accountReducers,\r\n   ...accountDetailsReducers\r\n});\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport logger  from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport combinedReducers from \"../reducers/index\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet middleware = [thunk];\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    middleware=[...middleware, logger];\r\n}\r\n\r\nexport const appStore = createStore(combinedReducers, composeWithDevTools(applyMiddleware(...middleware)) );","import React from \"react\";\r\nimport {FaUserCircle} from \"react-icons/fa\"\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"username-card\">\r\n            {\r\n                props.photo ? <img className=\"username-card__logo\" src={props.photo} alt=\"logo\"/> :\r\n                    <FaUserCircle className=\"username-card__logo\"/>\r\n            }\r\n            <span className=\"username-card__name\">{props.fullname}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n","import {\r\n    ACTION_STATUS_FORM_CLEAR_ERRORS,\r\n    ACTION_STATUS_FORM_FIELD_CHANGE,\r\n    ACTION_STATUS_RESET,\r\n    ACTION_STATUS_SET_ACTIVE,\r\n    getAction\r\n} from \"../constants/action-types\";\r\n\r\nexport function reset(action) {\r\n    return (dispatch) => dispatch({\r\n        type: getAction(action, ACTION_STATUS_RESET)\r\n    });\r\n}\r\n\r\nexport function setActive(action, payload) {\r\n    return (dispatch) => dispatch({\r\n        type: getAction(action, ACTION_STATUS_SET_ACTIVE),\r\n        payload\r\n    })\r\n}\r\n\r\nexport function changeField(action, field, value) {\r\n    return (dispatch) => dispatch({\r\n        type: getAction(action, ACTION_STATUS_FORM_FIELD_CHANGE),\r\n        payload: {field: field, value: value}\r\n    });\r\n}\r\n\r\nexport function clearErrors(action) {\r\n    return (dispatch) => dispatch({\r\n        type: getAction(action, ACTION_STATUS_FORM_CLEAR_ERRORS)\r\n    });\r\n}","import {ACTION_STATUS_FAILED, ACTION_STATUS_START, ACTION_STATUS_SUCCESS, getAction} from \"../../../global/constants/action-types\";\r\nimport {FETCH_TICKETS_ACTION} from \"../constants/reducerConstants\";\r\nimport {fetchTicketsAPI} from \"../api/fetchTicketsAPI\";\r\n\r\nexport function fetchTicketsAction() {\r\n    return (dispatch) => {\r\n        dispatch(start());\r\n        return dispatch(fetchTicketsAPI())\r\n            .then(res => dispatch(success(res)))\r\n            .catch(error => dispatch(failed(error)));\r\n    }\r\n}\r\n\r\nexport function start() {\r\n    return {\r\n        type: getAction(FETCH_TICKETS_ACTION, ACTION_STATUS_START)\r\n    }\r\n}\r\n\r\nexport function success(payload) {\r\n    return {\r\n        type: getAction(FETCH_TICKETS_ACTION, ACTION_STATUS_SUCCESS),\r\n        payload\r\n    }\r\n}\r\n\r\nexport function failed(error) {\r\n    return {\r\n        type: getAction(FETCH_TICKETS_ACTION, ACTION_STATUS_FAILED),\r\n        error,\r\n    }\r\n}","export function fetchTicketsAPI() {\r\n    return () => {\r\n        //return fetch(TICKETS_ENDPOINT,{\r\n        return fetch(\"https://7c5d6a5f-5fcb-4b46-831b-88962da10bdc.mock.pstmn.io/tickets\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(res => {\r\n            switch (res.status) {\r\n                case 200:\r\n                    return res.json();\r\n                case 401:\r\n                    throw new Error(\"Permission denied\");\r\n                default:\r\n                    throw Error(\"Something went wrong\");\r\n            }\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {MdLocationOn, MdPhoneAndroid} from \"react-icons/md\"\r\nimport {IoIosMail} from \"react-icons/io\"\r\nimport {fetchTicketsAction} from \"../../tickets/actions/fetchTicketsAction\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass ProfileDetails extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {tickets} = this.props;\r\n        if (!tickets.isFetching && !tickets.isLoaded) {\r\n            this.props.fetchTicketsAction();\r\n        }\r\n    }\r\n\r\n    countFinishedTickets() {\r\n        const filterVal = this.props.tickets.data.filter(ticket => ticket.assignee === \"Vladislav Lahtarin\" && ticket.status === \"Closed\");\r\n        return filterVal.length;\r\n    }\r\n\r\n    countOpenTickets() {\r\n        const filterVal = this.props.tickets.data.filter(ticket => ticket.assignee === \"Vladislav Lahtarin\" && ticket.status === \"Open\");\r\n        return filterVal.length;\r\n    }\r\n\r\n    render() {\r\n        const {accountDetails} = this.props;\r\n\r\n        const finishedTickets = this.countFinishedTickets();\r\n        const openTickets = this.countOpenTickets();\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-details\">\r\n                    <div className=\"profile-details__picture\">\r\n                        <div className=\"profile-details__picture-content\">\r\n                            <img src={accountDetails.userDetails.photo} alt=\"logo\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-details__name\"> {accountDetails.userDetails.fullName} </div>\r\n                    <div className=\"profile-details__contact\">\r\n                        <div className=\"profile-details__contact-email\">\r\n                            <IoIosMail className=\"profile-details__contact-logo\"/>\r\n                            {accountDetails.userDetails.email}\r\n                        </div>\r\n                        <div className=\"profile-details__contact-phone\">\r\n                            <MdPhoneAndroid className=\"profile-details__contact-logo\"/>\r\n                            {accountDetails.userDetails.phoneNumber}\r\n                        </div>\r\n                        <div className=\"profile-details__contact-location\">\r\n                            <MdLocationOn className=\"profile-details__contact-logo\"/>\r\n                            {accountDetails.userDetails.location}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-stats\">\r\n                    <div className=\"profile-stats__related-tickets\">\r\n                        <div className=\"profile-stats__title\">\r\n                            Connected tickets:\r\n                        </div>\r\n                        <div className=\"profile-stats__amount\">\r\n                            <div className=\"profile-stats__amount-type\">\r\n                                <div className=\"count\">{finishedTickets}</div>\r\n                                <div className=\"name\">Completed</div>\r\n                            </div>\r\n                            <div className=\"profile-stats__amount-type\">\r\n                                <div className=\"count\">{openTickets}</div>\r\n                                <div className=\"name\">In progress</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        accountDetails: state.accountDetails,\r\n        tickets: state.tickets,\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    fetchTicketsAction\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDetails);\r\n","import React from \"react\";\r\n\r\nimport {Container, Modal} from \"react-bootstrap\";\r\nimport Profile from \"../../../accountDetails/views/ProfileDetails\";\r\n\r\n\r\nconst ProfileModal = props => {\r\n    return (\r\n        <Modal className=\"ticket-modal-content\"\r\n               show={props.profileModal.modalIsOpen}\r\n               onHide={props.toggle}\r\n               backdrop=\"static\"\r\n               centered>\r\n            <Container>\r\n                <Modal.Header className=\"modal-underline-selector\" closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"profile-body\">\r\n                    <Profile/>\r\n                </Modal.Body>\r\n            </Container>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default ProfileModal;\r\n","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport {IoMdLogOut} from \"react-icons/io\"\r\nimport Username from \"./Username\";\r\nimport {OPEN_PROFILE_ACTION} from \"../../constants/reducerConstants\";\r\nimport {changeField} from \"../../../../global/actions/StandardActions\";\r\nimport ProfileModal from \"../modals/ProfileModal\";\r\n\r\nclass AccountDropdownCard extends React.Component {\r\n\r\n    toggleModal = () => {\r\n        this.props.changeField(OPEN_PROFILE_ACTION, \"modalIsOpen\", !this.props.profileModal.modalIsOpen)\r\n    };\r\n\r\n    render() {\r\n        const {accountDetails} = this.props;\r\n\r\n        return (\r\n            <div className=\"dropdown-card\">\r\n                <DropdownButton id=\"dropdown-basic-button\" alignRight\r\n                                title={<Username fullname={accountDetails.userDetails.fullName} photo={accountDetails.userDetails.photo}/>}>\r\n                    {/*<Dropdown.Item href=\"#/action-2\">*/}\r\n                    {/*    <IoMdClipboard className=\"dropdown-card__items-logo\"/>*/}\r\n                    {/*    Tasks*/}\r\n                    {/*</Dropdown.Item>*/}\r\n                    {/*<Dropdown.Item href=\"#/action-3\">*/}\r\n                    {/*    <MdSettings className=\"dropdown-card__items-logo\"/>*/}\r\n                    {/*    Settings*/}\r\n                    {/*</Dropdown.Item>*/}\r\n                    <Dropdown.Item href=\"#/authorize\">\r\n                        <IoMdLogOut className=\"dropdown-card__items-logo\"/>\r\n                        Log out\r\n                    </Dropdown.Item>\r\n                </DropdownButton>\r\n                <ProfileModal toggle={this.toggleModal}\r\n                              profileModal={this.props.profileModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    accountDetails: state.accountDetails,\r\n    profileModal: state.profileModal\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    bindActionCreators({changeField}, dispatch)\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDropdownCard);\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"sidebar-hamburger\">\r\n            <button className=\"sidebar-button\" onClick={props.click}>\r\n                <div className=\"sidebar-button__line\"> </div>\r\n                <div className=\"sidebar-button__line\"> </div>\r\n                <div className=\"sidebar-button__line\"> </div>\r\n            </button>\r\n        </div>\r\n    )\r\n};","export const PROFILE_ROUTE = \"PROFILE_ROUTE\";\r\nexport const TICKETS_ROUTE = \"TICKETS_ROUTE\";\r\nexport const CLIENTS_ROUTE = \"CLIENTS_ROUTE\" ;\r\nexport const INVOICES_ROUTE = \"INVOICES_ROUTE\";","import {PROFILE_ROUTE, INVOICES_ROUTE, TICKETS_ROUTE} from \"../constants/routes\";\r\nimport {FaHome, FaTasks, FaFileInvoiceDollar} from \"react-icons/fa\"\r\nimport {Link} from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport React from \"react\";\r\n\r\nfunction NavigationLinks(props) {\r\n\r\n    const linkActive = \"navigation-link active\";\r\n    const link = \"navigation-link\";\r\n\r\n    return (\r\n        <Nav>\r\n            <div className={props.hasOwnProperty(\"active\") && props.active === PROFILE_ROUTE ? linkActive : link}>\r\n                <Link className=\"navigation-link-content\" to=\"/\">\r\n                    <FaHome className=\"navigation-link-content__logo\"/>\r\n                    My profile\r\n                </Link>\r\n            </div>\r\n            <div className={props.hasOwnProperty(\"active\") && props.active === TICKETS_ROUTE ? linkActive : link}>\r\n                <Link className=\"navigation-link-content\" to=\"/tickets\">\r\n                    <FaTasks className=\"navigation-link-content__logo\"/>\r\n                    Tickets\r\n                </Link>\r\n            </div>\r\n            {/*<div className={props.hasOwnProperty(\"active\") && props.active === CLIENTS_ROUTE ? linkActive : link}>*/}\r\n            {/*    <Link className=\"navigation-link-content\" to=\"/clients\">*/}\r\n            {/*        <FaUsers className=\"navigation-link-content__logo\"/>*/}\r\n            {/*        Clients*/}\r\n            {/*    </Link>*/}\r\n            {/*</div>*/}\r\n            <div className={props.hasOwnProperty(\"active\") && props.active === INVOICES_ROUTE ? linkActive : link}>\r\n                <Link className=\"navigation-link-content\" to=\"/invoices\">\r\n                    <FaFileInvoiceDollar className=\"navigation-link-content__logo\"/>\r\n                    Invoices\r\n                </Link>\r\n            </div>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavigationLinks;","import React from \"react\";\r\nimport NavigationLinks from \"./NavigationLinks\";\r\n\r\nexport default props => (\r\n\r\n    <div className={!props.show ? \"sidebar\" : \"sidebar open\"}>\r\n        {props.show ? <button className=\"sidebar-close-button\" onClick={props.handleClose}>X</button> : null}\r\n        <NavigationLinks active={props.active}/>\r\n    </div>\r\n);\r\n\r\n","import React from \"react\";\r\n\r\nexport default () =>(\r\n    <div className=\"backdrop\"> </div>\r\n);\r\n\r\n","import React, {useState} from \"react\";\r\nimport AccountDropdownCard from \"../../modules/account/views/cards/AccountDropdownCard\";\r\nimport SidebarButton from \"./SidebarButton\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport NavigationLinks from \"./NavigationLinks\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction TopMenu(props) {\r\n\r\n    const [sidebar, setSidebar] = useState(false);\r\n    const handleClick = () => setSidebar(!sidebar);\r\n    const handleClose = () => setSidebar(false);\r\n\r\n    return (\r\n        <div className=\"top-menu\">\r\n            <SidebarButton click={handleClick}/>\r\n            <Link to=\"/\">\r\n                <div className=\"top-menu-logo\">\r\n                    <img src={process.env.PUBLIC_URL + \"/img/small_logo_white.png\"} alt=\"small_logo_white\"/>\r\n                    <img src={process.env.PUBLIC_URL + \"/img/logo_white.png\"} alt=\"logo_white\"/>\r\n                </div>\r\n            </Link>\r\n            <div className=\"top-menu-links\">\r\n                <NavigationLinks active={props.active}/>\r\n            </div>\r\n            <AccountDropdownCard/>\r\n            <Sidebar show={sidebar} handleClose={handleClose} active={props.active}/>\r\n            {sidebar ? <Backdrop/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopMenu;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AccountActivities extends React.Component {\r\n\r\n    render() {\r\n        const {accountDetails} = this.props;\r\n\r\n        accountDetails.userActivities.sort((a, b) => {\r\n            let dateA = new Date(a.dateTime);\r\n            let dateB = new Date(b.dateTime);\r\n            return dateB - dateA;\r\n        });\r\n\r\n        return (\r\n            <div className=\"activities\">\r\n                <h6 className=\"activities-header\">Latest activities</h6>\r\n                <div className=\"activities-body\">\r\n                    {\r\n                        accountDetails && accountDetails.userActivities.map((action, index) => (\r\n                            <div key={index} className=\"activities-body-item\">\r\n                                <div\r\n                                    className=\"activities-body-item__date\">{new Date(action.dateTime).toLocaleString()}</div>\r\n                                <div className=\"activities-body-item__text\">\r\n                                    <span\r\n                                        className=\"activities-body-item__text-username\">{accountDetails.userDetails.fullName}</span>\r\n                                    <span\r\n                                        className=\"activities-body-item__text-action\">{action.actionType} </span>\r\n                                    <span className=\"activities-body-item__text-number\">\r\n                                        <Link\r\n                                            to={`/tickets/details/${action.ticketNumber}`}>\r\n                                             #{action.ticketNumber}\r\n                                        </Link>\r\n                                    </span>\r\n                                </div>\r\n                                <span className=\"activities-body-item__circle\"> </span>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        accountDetails: state.accountDetails,\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountActivities);\r\n","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport TopMenu from \"../global/navigation/TopMenu\";\r\nimport {PROFILE_ROUTE} from \"../global/constants/routes\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfileDetails from \"../modules/accountDetails/views/ProfileDetails\";\r\nimport AccountActivities from \"../modules/accountDetails/views/AccountActivities\";\r\n\r\nclass ProfileLayout extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout\">\r\n                    <div className=\"layout-header\">\r\n                        <Container>\r\n                            <TopMenu active={PROFILE_ROUTE}/>\r\n                        </Container>\r\n                    </div>\r\n                    <div className=\"layout-content\">\r\n                        <Container>\r\n                            <div className=\"layout-content__title\">\r\n                                <h3>Profile layout</h3>\r\n                            </div>\r\n                            <div className=\"layout-content__body home\">\r\n                                <div className=\"layout-content__body-item account_profile\">\r\n                                    <ProfileDetails/>\r\n                                </div>\r\n                                <div className=\"layout-content__body-item account_activities\">\r\n                                    <AccountActivities/>\r\n                                </div>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({}, dispatch));\r\n\r\nexport default connect(null, mapDispatchToProps)(ProfileLayout);","export const TICKET_TYPE_PAYMENTS = \"PAYMENTS\";\r\nexport const TICKET_TYPE_SOFTWARE = \"SOFTWARE_ISSUES\";\r\n\r\nexport const TICKET_PRIORITY_HIGH = \"High\";\r\nexport const TICKET_PRIORITY_MEDIUM= \"Medium\";\r\nexport const TICKET_PRIORITY_LOW= \"Low\";\r\n\r\nexport const TICKET_STATUS_OPEN= \"Open\";\r\nexport const TICKET_STATUS_CLOSED= \"Closed\";\r\n\r\nexport const AVAILABLE_TICKET_TYPES = [TICKET_TYPE_PAYMENTS];\r\nexport const AVAILABLE_TICKET_PRIORITY_TYPES = [TICKET_PRIORITY_HIGH, TICKET_PRIORITY_MEDIUM, TICKET_PRIORITY_LOW];\r\nexport const AVAILABLE_TICKET_STATUS_TYPES = [TICKET_STATUS_OPEN, TICKET_STATUS_CLOSED];","export function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n}\r\n\r\nexport function splitOnUpperCase(string) {\r\n    return string.split(/(?=[A-Z])/).join(\" \").toLowerCase();\r\n}\r\n\r\nexport function countCharacters(string) {\r\n    return string.replace(/\\s/g, \"\").length\r\n}\r\n","import {\r\n    CREATE_PAYMENT_TICKET_DEMO_ACTION,\r\n    CREATE_TICKET_ACTION\r\n} from \"../../constants/reducerConstants\";\r\nimport {ACTION_STATUS_START, getAction} from \"../../../../global/constants/action-types\";\r\n\r\n\r\nexport function createPaymentTicketDemo() {\r\n    return (dispatch, getState) => {\r\n        const form = getState().createPaymentTicketForm;\r\n        const type = getState().createTicket.ticketType;\r\n        const currentTimeInMs = new Date().getTime();\r\n\r\n        const payload = {\r\n            id: `${currentTimeInMs}`,\r\n            type: type,\r\n            assignee: form.assignee,\r\n            priority: form.priority,\r\n            ticketName: form.ticketName,\r\n            clientName: form.clientName,\r\n            invoiceNumber: form.invoiceNumber,\r\n            description: form.description,\r\n            createdBy: form.createdBy,\r\n            createdAt: currentTimeInMs,\r\n            status: form.status,\r\n            ticketNumber: Math.round(currentTimeInMs / 1000),\r\n        };\r\n        dispatch(start());\r\n        dispatch(createTicketDemo(payload))\r\n    }\r\n}\r\n\r\n\r\nfunction start() {\r\n    return {\r\n        type: getAction(CREATE_TICKET_ACTION, ACTION_STATUS_START)\r\n    }\r\n}\r\n\r\nfunction createTicketDemo(payload) {\r\n    return {\r\n        type: CREATE_PAYMENT_TICKET_DEMO_ACTION,\r\n        payload,\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {changeField, clearErrors, reset} from \"../../../../../global/actions/StandardActions\";\r\nimport {CREATE_PAYMENT_TICKET_ACTION} from \"../../../constants/reducerConstants\";\r\nimport {AVAILABLE_TICKET_PRIORITY_TYPES} from \"../../../constants/ticketConstants\";\r\nimport {capitalizeFirstLetter, countCharacters, splitOnUpperCase} from \"../../../../../global/utils/StringUpdates\";\r\nimport {createPaymentTicketDemo} from \"../../../actions/create/createPaymentTicketDemoAction\";\r\n\r\nclass Payments extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.reset(CREATE_PAYMENT_TICKET_ACTION);\r\n    }\r\n\r\n    handleFieldChange = (field, value) => {\r\n        const {changeField} = this.props;\r\n        changeField(CREATE_PAYMENT_TICKET_ACTION, field, value);\r\n        if (countCharacters(value) > 0) {\r\n            changeField(CREATE_PAYMENT_TICKET_ACTION, field + \"Error\", null);\r\n        }\r\n    };\r\n\r\n    validate = () => {\r\n        const {clearErrors, createPaymentTicketForm, changeField} = this.props;\r\n\r\n        clearErrors(CREATE_PAYMENT_TICKET_ACTION);\r\n        const validationFields = [\"assignee\", \"priority\", \"ticketName\", \"clientName\", \"invoiceNumber\", \"description\"];\r\n        let isValid = true;\r\n        validationFields.forEach(field => {\r\n            if (createPaymentTicketForm[field] === null || countCharacters(createPaymentTicketForm[field]) <= 0) {\r\n                if (field === \"assignee\" || field === \"priority\") {\r\n                    changeField(CREATE_PAYMENT_TICKET_ACTION, field + \"Error\", \"Please select \" + field);\r\n                } else {\r\n                    changeField(CREATE_PAYMENT_TICKET_ACTION, field + \"Error\", \"Please enter \" + splitOnUpperCase(field));\r\n                }\r\n                isValid = false;\r\n            }\r\n        });\r\n        return isValid;\r\n    };\r\n\r\n    createTicket = e => {\r\n        const {createPaymentTicketDemo} = this.props;\r\n        e.preventDefault();\r\n\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            createPaymentTicketDemo();\r\n        }\r\n        //this.props.createPaymentTicket();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"payments-form-selectors\">\r\n                    <Form.Group className=\"smarts-ticket-form\">\r\n                        <label className=\"smarts-ticket-selector-label\"> Assignee</label>\r\n                        <select className=\"smarts-select\"\r\n                                defaultValue=\"default\"\r\n                                onChange={(e) => this.handleFieldChange(\"assignee\", e.target.value)}>\r\n                            <option value=\"default\" disabled>Assignee</option>\r\n                            <option>Kristo Truu</option>\r\n                            <option>Ilja Andrejev</option>\r\n                            <option>Vladislav Lahtarin</option>\r\n                        </select>\r\n                        <span\r\n                            className=\"smarts-ticket-error-text\">{this.props.createPaymentTicketForm.assigneeError}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"smarts-ticket-form\">\r\n                        <label className=\"smarts-ticket-selector-label\"> Priority</label>\r\n                        <select className=\"smarts-select\"\r\n                                defaultValue=\"default\"\r\n                                onChange={(e) => this.handleFieldChange(\"priority\", e.target.value)}>\r\n                            <option value=\"default\" disabled>Priority</option>\r\n                            {AVAILABLE_TICKET_PRIORITY_TYPES.map(\r\n                                type => <option key={type}\r\n                                                value={type}>{capitalizeFirstLetter(type).replace(/_/, \" \")}</option>)}\r\n                        </select>\r\n                        <span\r\n                            className=\"smarts-ticket-error-text\">{this.props.createPaymentTicketForm.priorityError}</span>\r\n                    </Form.Group>\r\n                </div>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                    <input className=\"smarts-input\" type=\"text\"\r\n                           onChange={(e) => this.handleFieldChange(\"ticketName\", e.target.value)}/>\r\n                    <label className=\"smarts-ticket-label\"> Ticket name</label>\r\n                    <span\r\n                        className=\"smarts-ticket-error-text\">{this.props.createPaymentTicketForm.ticketNameError}</span>\r\n                </Form.Group>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                    <input className=\"smarts-input\" type=\"text\"\r\n                           onChange={(e) => this.handleFieldChange(\"clientName\", e.target.value)}/>\r\n                    <label className=\"smarts-ticket-label\"> Client name</label>\r\n                    <span\r\n                        className=\"smarts-ticket-error-text\">{this.props.createPaymentTicketForm.clientNameError}</span>\r\n                </Form.Group>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                    <input className=\"smarts-input\" type=\"text\"\r\n                           onChange={(e) => this.handleFieldChange(\"invoiceNumber\", e.target.value)}/>\r\n                    <label className=\"smarts-ticket-label\">Invoice number</label>\r\n                    <span\r\n                        className=\"smarts-ticket-error-text\">{this.props.createPaymentTicketForm.invoiceNumberError}</span>\r\n                </Form.Group>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                            <textarea className=\"smarts-textarea\" rows=\"3\"\r\n                                      onChange={(e) => this.handleFieldChange(\"description\", e.target.value)}/>\r\n                    <label className=\"smarts-ticket-label\"> Description</label>\r\n                    <span\r\n                        className=\"smarts-ticket-error-text\">{this.props.createPaymentTicketForm.descriptionError}</span>\r\n                </Form.Group>\r\n                <div className=\"ticket-create-button-area\">\r\n                    <button className=\"ticket-create-button smarts-button \"\r\n                            onClick={this.createTicket}>Create\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        createPaymentTicketForm: state.createPaymentTicketForm\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField,\r\n    clearErrors,\r\n    reset,\r\n    // createPaymentTicket: createPaymentTicketAction,\r\n    createPaymentTicketDemo\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {AVAILABLE_TICKET_PRIORITY_TYPES} from \"../../../constants/ticketConstants\";\r\nimport {capitalizeFirstLetter} from \"../../../../../global/utils/StringUpdates\";\r\n\r\n\r\nclass Software extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"payments-form-selectors\">\r\n                    <Form.Group className=\"smarts-ticket-form\">\r\n                        <label className=\"smarts-ticket-selector-label\"> Assignee</label>\r\n                        <select className=\"smarts-select\"\r\n                                defaultValue=\"default\"\r\n                                onChange={(e) => this.handleFieldChange(\"assignee\", e.target.value)}>\r\n                            <option value=\"default\" disabled>Assignee</option>\r\n                            <option>Kristo Truu</option>\r\n                            <option>Ilja Andrejev</option>\r\n                            <option>Vladislav Lahtarin</option>\r\n                        </select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"smarts-ticket-form\">\r\n                        <label className=\"smarts-ticket-selector-label\"> Priority</label>\r\n                        <select className=\"smarts-select\"\r\n                                defaultValue=\"default\"\r\n                                onChange={(e) => this.handleFieldChange(\"ticketType\", e.target.value)}>\r\n                            <option value=\"default\" disabled>Priority</option>\r\n                            {AVAILABLE_TICKET_PRIORITY_TYPES.map(\r\n                                type => <option key={type}\r\n                                                value={type}>{capitalizeFirstLetter(type).replace(/_/, \" \")}</option>)}\r\n                        </select>\r\n                    </Form.Group>\r\n                </div>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                    <input type=\"text\" className=\"smarts-input\" required/>\r\n                    <label className=\"smarts-ticket-label\"> Ticket name</label>\r\n                </Form.Group>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                    <input type=\"text\" className=\"smarts-input\" required/>\r\n                    <label className=\"smarts-ticket-label\"> Client name</label>\r\n                </Form.Group>\r\n                <Form.Group className=\"smarts-ticket-form\">\r\n                    <textarea rows=\"3\" className=\"smarts-textarea\" required/>\r\n                    <label className=\"smarts-ticket-label\"> Description</label>\r\n                </Form.Group>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({}, dispatch));\r\n\r\nexport default connect(null, mapDispatchToProps)(Software);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {AVAILABLE_TICKET_TYPES, TICKET_TYPE_PAYMENTS, TICKET_TYPE_SOFTWARE} from \"../../../constants/ticketConstants\";\r\nimport {capitalizeFirstLetter} from \"../../../../../global/utils/StringUpdates\";\r\nimport {changeField} from \"../../../../../global/actions/StandardActions\";\r\nimport {CREATE_TICKET_ACTION} from \"../../../constants/reducerConstants\";\r\nimport Payments from \"./Payments\";\r\nimport Software from \"./Software\";\r\n\r\nclass Create extends React.Component {\r\n\r\n    handleFieldChange(field, value) {\r\n        this.props.changeField(CREATE_TICKET_ACTION, field, value);\r\n    };\r\n\r\n    renderSelection() {\r\n        return (\r\n            <Form.Group className=\"smarts-ticket-form\">\r\n                <label className=\"smarts-ticket-selector-label\"> Type</label>\r\n                <select className=\"smarts-select\"\r\n                        defaultValue=\"default\"\r\n                        onChange={(e) => this.handleFieldChange(\"ticketType\", e.target.value)}>\r\n                    <option value=\"default\" disabled>Select ticket type</option>\r\n                    {AVAILABLE_TICKET_TYPES.map(\r\n                        type => <option key={type}\r\n                                        value={type}>{capitalizeFirstLetter(type).replace(/_/, \" \")}</option>)}\r\n                </select>\r\n            </Form.Group>\r\n        )\r\n    }\r\n\r\n    renderTicketContent() {\r\n        const {createTicket} = this.props;\r\n        switch (createTicket.ticketType) {\r\n            case TICKET_TYPE_PAYMENTS:\r\n                return <Payments/>;\r\n            case TICKET_TYPE_SOFTWARE:\r\n                return <Software/>;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Form>\r\n                    {this.renderSelection()}\r\n                    {this.renderTicketContent()}\r\n                </Form>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        createTicket: state.createTicket,\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {CREATE_TICKET_ACTION} from \"../../constants/reducerConstants\";\r\nimport {changeField, reset} from \"../../../../global/actions/StandardActions\";\r\nimport {Container, Modal} from \"react-bootstrap\";\r\nimport Create from \"../forms/create/Create\";\r\n\r\nclass CreateTicketModal extends React.Component {\r\n\r\n    toggleModal = () => {\r\n        this.props.changeField(CREATE_TICKET_ACTION, \"modalIsOpen\", !this.props.createTicket.modalIsOpen)\r\n    };\r\n\r\n    resetHandler = () => {\r\n        this.props.reset(CREATE_TICKET_ACTION);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <button className=\"smarts-button new-ticket-button\" onClick={this.toggleModal}>\r\n                    New ticket\r\n                </button>\r\n\r\n                <Modal className=\"ticket-modal-content\"\r\n                       show={this.props.createTicket.modalIsOpen}\r\n                       onHide={this.toggleModal}\r\n                       onExit={this.resetHandler}\r\n                       backdrop=\"static\"\r\n                       keyboard={false}\r\n                       centered>\r\n                    <Container>\r\n                        <Modal.Header className=\"modal-underline-selector\" closeButton>\r\n                            <Modal.Title>New ticket</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Create/>\r\n                        </Modal.Body>\r\n                    </Container>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        createTicket: state.createTicket\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField,\r\n    reset\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTicketModal);\r\n","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {TICKET_TABLE_ACTION} from \"../../constants/reducerConstants\";\r\nimport {changeField} from \"../../../../global/actions/StandardActions\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nclass TicketTablePagination extends React.Component {\r\n\r\n    pageChangeHandler = ({selected}) => {\r\n        this.props.changeField(TICKET_TABLE_ACTION, \"currentPage\", selected);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ReactPaginate\r\n                    previousLabel={'<'}\r\n                    nextLabel={'>'}\r\n                    breakLabel={'...'}\r\n                    breakClassName={'break-me'}\r\n                    pageCount={this.props.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.pageChangeHandler}\r\n                    containerClassName={'pagination'}\r\n                    activeClassName={'active'}\r\n                    forcePage={this.props.ticketsTableData.currentPage}\r\n                    pageClassName={\"smarts-page-item\"}\r\n                    pageLinkClassName={\"smarts-page-link\"}\r\n                    nextClassName={\"smarts-page-item\"}\r\n                    previousClassName={\"smarts-page-item\"}\r\n                    nextLinkClassName={\"smarts-page-link\"}\r\n                    previousLinkClassName={\"smarts-page-link\"}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField\r\n}, dispatch));\r\n\r\nexport default connect(null, mapDispatchToProps)(TicketTablePagination);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport {changeField, reset} from \"../../../../global/actions/StandardActions\";\r\nimport {fetchTicketsAction} from \"../../actions/fetchTicketsAction\";\r\nimport {BiDownArrowAlt, BiUpArrowAlt} from 'react-icons/bi';\r\nimport {TICKET_TABLE_ACTION, REORDER_TICKETS_ACTION} from \"../../constants/reducerConstants\";\r\nimport TicketTablePagination from \"../cards/TicketTablePagination\";\r\nimport {LoopCircleLoading} from 'react-loadingg';\r\n\r\nclass TicketsTable extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {tickets, reset, fetchTicketsAction} = this.props;\r\n        reset(TICKET_TABLE_ACTION);\r\n        if (!tickets.isFetching && !tickets.isLoaded) {\r\n            fetchTicketsAction()\r\n        }\r\n    }\r\n\r\n    typeHandler() {\r\n        const {ticketsTableData, changeField} = this.props;\r\n        if (ticketsTableData.sortType.indexOf(\"asc\") > -1) {\r\n            changeField(TICKET_TABLE_ACTION, \"sortType\", \"desc\");\r\n            return \"desc\"\r\n        } else {\r\n            changeField(TICKET_TABLE_ACTION, \"sortType\", \"asc\");\r\n            return \"asc\"\r\n        }\r\n    };\r\n\r\n    onSort = sortField => {\r\n        const {tickets, changeField} = this.props;\r\n        const sortType = this.typeHandler();\r\n        const orderedData = _.orderBy(tickets.data, sortField, sortType);\r\n        changeField(REORDER_TICKETS_ACTION, \"data\", orderedData);\r\n        changeField(TICKET_TABLE_ACTION, \"sortField\", sortField);\r\n    };\r\n\r\n    getFilteredData() {\r\n        const {ticketsTableData, tickets} = this.props;\r\n        const filterField = ticketsTableData.filterField;\r\n        const sortField = ticketsTableData.sortField === \"ticketNumber\" ? \"ticketNumber\" : ticketsTableData.sortField;\r\n        const sortType = ticketsTableData.sortType === \"desc\" ? \"desc\" : \"asc\";\r\n        if (!filterField) {\r\n            return _.orderBy(tickets.data, sortField, sortType);\r\n        } else {\r\n            return tickets.data.filter(item => {\r\n                return item[\"ticketName\"].toLowerCase().includes(filterField.toLowerCase())\r\n                    || item[\"clientName\"].toLowerCase().includes(filterField.toLowerCase())\r\n                    || item[\"assignee\"].toLowerCase().includes(filterField.toLowerCase())\r\n                    || item[\"status\"].toLowerCase().includes(filterField.toLowerCase())\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {ticketsTableData} = this.props;\r\n        const pageSize = 10;\r\n        const filteredData = this.getFilteredData();\r\n        const pageCount = Math.ceil(filteredData.length / pageSize);\r\n        const displayedData = _.chunk(filteredData, pageSize)[ticketsTableData.currentPage];\r\n        const iconType = ticketsTableData.sortType === \"asc\" ?\r\n            <BiDownArrowAlt className=\"table-sort-icon\"/> : <BiUpArrowAlt className=\"table-sort-icon\"/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {!displayedData ? <LoopCircleLoading/> : null}\r\n                <Table className=\"ticket-table\" hover striped>\r\n                    <thead className=\"ticket-table__head\">\r\n                    <tr>\r\n                        <th onClick={() => this.onSort(\"ticketNumber\")}>\r\n                            <span className=\"ticket-table__head-col-name\">\r\n                               Number {ticketsTableData.sortField === \"ticketNumber\" ? iconType : null}\r\n                            </span>\r\n\r\n                        </th>\r\n                        <th onClick={() => this.onSort(\"ticketName\")}>\r\n                            <span className=\"ticket-table__head-col-name\">\r\n                                  Ticket name {ticketsTableData.sortField === \"ticketName\" ? iconType : null}\r\n                            </span>\r\n\r\n                        </th>\r\n                        <th onClick={() => this.onSort(\"clientName\")}>\r\n                            <span className=\"ticket-table__head-col-name\">\r\n                                Client name {ticketsTableData.sortField === \"clientName\" ? iconType : null}\r\n                            </span>\r\n\r\n                        </th>\r\n                        <th onClick={() => this.onSort(\"assignee\")}>\r\n                            <span className=\"ticket-table__head-col-name\">\r\n                                 Assignee {ticketsTableData.sortField === \"assignee\" ? iconType : null}\r\n                            </span>\r\n\r\n                        </th>\r\n                        <th onClick={() => this.onSort(\"createdAt\")}>\r\n                            <span className=\"ticket-table__head-col-name\">\r\n                                 Created at {ticketsTableData.sortField === \"createdAt\" ? iconType : null}\r\n                            </span>\r\n\r\n                        </th>\r\n                        <th onClick={() => this.onSort(\"status\")}>\r\n                            <span className=\"ticket-table__head-col-name\">\r\n                                Status {ticketsTableData.sortField === \"status\" ? iconType : null}\r\n                            </span>\r\n\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody className=\"ticket-table__body\">\r\n                    {\r\n                        displayedData && displayedData.map((ticket) => (\r\n                                <tr key={ticket.id}>\r\n                                    <td>\r\n                                        <Link\r\n                                            to={`/tickets/details/${ticket.id}`}>\r\n                                            {ticket.ticketNumber}\r\n                                        </Link>\r\n                                    </td>\r\n                                    <td>{ticket.ticketName}</td>\r\n                                    <td>{ticket.clientName}</td>\r\n                                    <td>{ticket.assignee}</td>\r\n                                    <td>{new Date(ticket.createdAt).toLocaleString()}</td>\r\n                                    <td>{ticket.status}</td>\r\n                                </tr>\r\n                            )\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                {filteredData.length > pageSize\r\n                    ? <TicketTablePagination pageCount={pageCount}\r\n                                             ticketsTableData={ticketsTableData}/>\r\n                     : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        ticketsTableData: state.ticketsTableData,\r\n        tickets: state.tickets,\r\n        details: state.ticketDetails\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField,\r\n    reset,\r\n    fetchTicketsAction\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TicketsTable);\r\n","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeField} from \"../../../../global/actions/StandardActions\";\r\nimport {FILTER_TABLE_ACTION} from \"../../constants/reducerConstants\";\r\n\r\nclass TicketSearch extends React.Component {\r\n\r\n    handleFieldChange(field, value) {\r\n        this.props.changeField(FILTER_TABLE_ACTION, field, value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <input className=\"smarts-input\"\r\n                       type=\"text\"\r\n                       placeholder=\"Search ticket\"\r\n                       onChange={(e) => this.handleFieldChange(\"filterField\", e.target.value)}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField\r\n}, dispatch));\r\n\r\nexport default connect(null, mapDispatchToProps)(TicketSearch);\r\n","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {TICKETS_ROUTE} from \"../global/constants/routes\";\r\nimport TopMenu from \"../global/navigation/TopMenu\";\r\nimport CreateTicketModal from \"../modules/tickets/views/modals/CreateTicketModal\";\r\nimport TicketsTable from \"../modules/tickets/views/tables/TicketsTable\";\r\nimport TicketSearch from \"../modules/tickets/views/cards/TicketSearch\";\r\n\r\nclass TicketsLayout extends React.Component {\r\n\r\n    countUnsolvedIssues() {\r\n        const unsolvedIssues = this.props.tickets.data.filter(ticket => ticket.status === \"Open\").length;\r\n        return unsolvedIssues;\r\n    }\r\n\r\n    render() {\r\n        const totalIssues = this.props.tickets.data.length;\r\n        const unsolvedIssues = this.countUnsolvedIssues();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout\">\r\n                    <div className=\"layout-header\">\r\n                        <Container>\r\n                            <TopMenu active={TICKETS_ROUTE}/>\r\n                        </Container>\r\n                    </div>\r\n                    <div className=\"layout-content\">\r\n                        <Container>\r\n                            <div className=\"layout-content__title\">\r\n                                <h3>Customer support tickets</h3>\r\n                                <div className=\"tickets-table-issue\">\r\n                                    <span className=\"tickets-table-issue-text\">Total count of issues :</span>\r\n                                    {totalIssues}\r\n                                </div>\r\n                                <div className=\"tickets-table-issue\">\r\n                                    <span className=\"tickets-table-issue-text\">Issues for solving:</span>\r\n                                    {unsolvedIssues}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"layout-content__elements\">\r\n                                <CreateTicketModal/>\r\n                                <TicketSearch/>\r\n                            </div>\r\n                            <div className=\"layout-content__body tickets-table-content\">\r\n                                <TicketsTable/>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        ticketsTableData: state.ticketsTableData,\r\n        tickets: state.tickets\r\n\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps, null)(TicketsLayout);","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport TopMenu from \"../global/navigation/TopMenu\";\r\nimport {CLIENTS_ROUTE} from \"../global/constants/routes\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ClientsLayout extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout\">\r\n                    <div className=\"layout-header\">\r\n                        <Container>\r\n                            <TopMenu active={CLIENTS_ROUTE}/>\r\n                        </Container>\r\n                    </div>\r\n                    <div className=\"layout-content\">\r\n                        <Container>\r\n                            <div className=\"layout-content__title\">\r\n                                <h3>Clients layout</h3>\r\n                            </div>\r\n                            <div className=\"layout-content__body\">\r\n                                Table of final clients\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({}, dispatch));\r\n\r\nexport default connect(null, mapDispatchToProps)(ClientsLayout);","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport TopMenu from \"../global/navigation/TopMenu\";\r\nimport {INVOICES_ROUTE} from \"../global/constants/routes\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass InvoicesLayout extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout\">\r\n                    <div className=\"layout-header\">\r\n                        <Container>\r\n                            <TopMenu active={INVOICES_ROUTE}/>\r\n                        </Container>\r\n                    </div>\r\n                    <div className=\"layout-content\">\r\n                        <Container>\r\n                            <div className=\"layout-content__title\">\r\n                                <h3>Invoices layout</h3>\r\n                            </div>\r\n                            <div className=\"layout-content__body\">\r\n                                Table of invoices\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({}, dispatch));\r\n\r\nexport default connect(null, mapDispatchToProps)(InvoicesLayout);","import {TICKET_DETAILS_CREATE_COMMENT_ACTION} from \"../constants/reducerConstants\";\r\n\r\nexport function addComment(comment) {\r\n    return (dispatch) => dispatch({\r\n        type: TICKET_DETAILS_CREATE_COMMENT_ACTION,\r\n        payload: comment\r\n    });\r\n}","import {UPDATE_ACCOUNT_ACTIVITY_ACTION} from \"../constants/reducerConstants\";\r\n\r\nexport function addAction(action) {\r\n    return (dispatch) => dispatch({\r\n        type: UPDATE_ACCOUNT_ACTIVITY_ACTION,\r\n        payload: {actionType: action.actionType, ticketNumber: action.ticketNumber}\r\n    });\r\n}","export const CREATED_TICKET = \"created ticket\";\r\nexport const CLOSED_TICKET = \"closed ticket\";\r\nexport const OPENED_TICKET = \"opened ticket\";\r\nexport const EDITED_TICKET = \"edited ticket\";\r\nexport const ADDED_COMMENT = \"commented ticket\";\r\n","import {FETCH_TICKET_DETAILS_ACTION} from \"../constants/reducerConstants\";\r\n\r\nexport function fetchTicketDetails(ticket) {\r\n    return (dispatch) => dispatch({\r\n        type: FETCH_TICKET_DETAILS_ACTION,\r\n        payload: ticket\r\n    });\r\n}","import {UPDATE_TICKET_ACTION,} from \"../../constants/reducerConstants\";\r\n\r\nexport function updateTicket(field, value) {\r\n    return (dispatch, getState) => {\r\n        const updatedTicket = getState().ticketDetails;\r\n\r\n        const payload = {\r\n            field: field,\r\n            value: value,\r\n            ticketId: updatedTicket.id\r\n        };\r\n        dispatch(createTicketDemo(payload))\r\n    }\r\n}\r\n\r\nfunction createTicketDemo(payload) {\r\n    return {\r\n        type: UPDATE_TICKET_ACTION,\r\n        payload,\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport AccountCard from \"../../account/views/cards/Username\";\r\nimport {changeField, reset} from \"../../../global/actions/StandardActions\";\r\nimport {addComment} from \"../actions/ticketDetailsAction\";\r\nimport {addAction} from \"../../accountDetails/actions/accountDetailsAction\";\r\nimport EdiText from \"react-editext\";\r\nimport {TICKET_DETAILS_ACTION} from \"../constants/reducerConstants\";\r\nimport {AVAILABLE_TICKET_PRIORITY_TYPES, AVAILABLE_TICKET_STATUS_TYPES} from \"../../tickets/constants/ticketConstants\";\r\nimport {ADDED_COMMENT, CLOSED_TICKET, EDITED_TICKET, OPENED_TICKET}\r\n    from \"../../accountDetails/constants/activityConstants\";\r\nimport {fetchTicketDetails} from \"../actions/fetchTicketDetailsAction\";\r\nimport {updateTicket} from \"../../tickets/actions/create/updateTicketAction\";\r\n\r\n\r\nclass TicketDetails extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {reset, selectedTicket, fetchTicketDetails} = this.props;\r\n        reset(TICKET_DETAILS_ACTION);\r\n        fetchTicketDetails(selectedTicket);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.commentText.value = \"\";\r\n    }\r\n\r\n    saveComment = () => {\r\n        const {addAction, addComment, details} = this.props;\r\n        if (this.commentText.value.length > 0) {\r\n            addComment(this.commentText.value);\r\n            addAction({actionType: ADDED_COMMENT, ticketNumber: details.id});\r\n        }\r\n    };\r\n\r\n    handleFieldChange(field, value) {\r\n        const {changeField, addAction, details, updateTicket} = this.props;\r\n        if (details[field] !== value) {\r\n            changeField(TICKET_DETAILS_ACTION, field, value);\r\n            if (field === \"status\" && value === \"Closed\") {\r\n                addAction({actionType: CLOSED_TICKET, ticketNumber: details.id});\r\n            } else if (field === \"status\" && value === \"Open\") {\r\n                addAction({actionType: OPENED_TICKET, ticketNumber: details.id});\r\n            } else {\r\n                addAction({actionType: EDITED_TICKET, ticketNumber: details.id});\r\n            }\r\n            updateTicket(field,value);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {details, accountDetails} = this.props;\r\n        details.comments && details.comments.sort((a, b) => {\r\n            let dateA = new Date(a.datetime);\r\n            let dateB = new Date(b.datetime);\r\n            return dateB - dateA;\r\n        });\r\n\r\n        return (\r\n            <div className=\"ticket-details\">\r\n                <div className=\"ticket-details-main\">\r\n                    <div className=\"ticket-details-main-half\">\r\n                        <div className=\"module\">\r\n                            <div className=\"module-header\">Details</div>\r\n                            <div className=\"module-content\">\r\n                                <ul className=\"module-list\">\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Ticket number:</div>\r\n                                        <EdiText viewProps={{className: \"module-list-item__value\"}}\r\n                                                 showButtonsOnHover editOnViewClick={true} type=\"number\"\r\n                                                 value={`${details.ticketNumber}`}\r\n                                                 onSave={(value) => this.handleFieldChange(\"ticketNumber\", value)}/>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Ticket name:</div>\r\n                                        <EdiText viewProps={{className: \"module-list-item__value\"}}\r\n                                                 showButtonsOnHover editOnViewClick={true} type=\"text\"\r\n                                                 value={details.ticketName}\r\n                                                 onSave={(value) => this.handleFieldChange(\"ticketName\", value)}/>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Invoice number:</div>\r\n                                        <EdiText viewProps={{className: \"module-list-item__value\"}}\r\n                                                 showButtonsOnHover editOnViewClick={true} type=\"text\"\r\n                                                 value={details.invoiceNumber}\r\n                                                 onSave={(value) => this.handleFieldChange(\"invoiceNumber\", value)}/>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Type:</div>\r\n                                        <div className=\"module-list-item__value\">{details.type}</div>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Priority:</div>\r\n                                        <select defaultValue=\"default\"\r\n                                                className={[\"module-list-item__value\", \"ticket-priority\", `priority-${details.priority}`.toLowerCase()].join(\" \")}\r\n                                                onChange={(e) => this.handleFieldChange(\"priority\", e.target.value)}>\r\n                                            <option value=\"default\"\r\n                                                    disabled>{details.priority}</option>\r\n                                            {AVAILABLE_TICKET_PRIORITY_TYPES.map(\r\n                                                type => <option key={type} value={type}>{type}</option>)}\r\n                                        </select>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Status:</div>\r\n                                        <select defaultValue=\"default\"\r\n                                                onChange={(e) => this.handleFieldChange(\"status\", e.target.value)}>\r\n                                            <option value=\"default\" disabled>{details.status}</option>\r\n                                            {AVAILABLE_TICKET_STATUS_TYPES.map(\r\n                                                status => <option key={status} value={status}>{status}</option>)}\r\n                                        </select>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ticket-details-main-half\">\r\n                        <div className=\"module\">\r\n                            <span className=\"module-header\">People</span>\r\n                            <div className=\"module-content\">\r\n                                <ul className=\"module-list\">\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Client:</div>\r\n                                        <EdiText viewProps={{className: \"module-list-item__value\"}} showButtonsOnHover\r\n                                                 editOnViewClick={true} type=\"text\" value={details.clientName}\r\n                                                 onSave={(value) => this.handleFieldChange(\"clientName\", value)}/>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Created by:</div>\r\n                                        <div className=\"module-list-item__value\">\r\n                                            <AccountCard fullname={details.createdBy}\r\n                                                         photo={accountDetails.userDetails.photo}/>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Assignee:</div>\r\n                                        <div className=\"module-list-item__value\">\r\n                                            <AccountCard fullname={details.assignee}/>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"module\">\r\n                            <div className=\"module-header\">Dates</div>\r\n                            <div className=\"module-content\">\r\n                                <ul className=\"module-list\">\r\n                                    <li className=\"module-list-item\">\r\n                                        <div className=\"module-list-item__title\">Created at:</div>\r\n                                        <div\r\n                                            className=\"module-list-item__value\">{new Date(details.createdAt).toLocaleString()}</div>\r\n                                    </li>\r\n                                    {details.updatedAt ?\r\n                                        <li className=\"module-list-item\">\r\n                                            <div className=\"module-list-item__title\">Updated at:</div>\r\n                                            <div\r\n                                                className=\"module-list-item__value\">{new Date(details.updatedAt).toLocaleString()}</div>\r\n                                        </li>\r\n                                        : null}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ticket-details-secondary\">\r\n                    <div className=\"ticket-details-secondary-description\">\r\n                        <div className=\"module\">\r\n                            <div className=\"module-header\">Description</div>\r\n                            <div className=\"module-content\">\r\n                                <EdiText type=\"textarea\" showButtonsOnHover editOnViewClick={true}\r\n                                         value={details.description}\r\n                                         onSave={(value) => this.handleFieldChange(\"description\", value)}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ticket-details-secondary-comments\">\r\n                        <div className=\"module\">\r\n                            <div className=\"module-header\">Comments\r\n                                ({details.comments ? details.comments.length : \"0\"})\r\n                            </div>\r\n                            <div className=\"module-content\">\r\n                                {details && details.comments && details.comments.map((comment, key) => {\r\n                                    return (\r\n                                        <ul key={key} className=\"module-list comment\">\r\n                                            <li className=\"author\">\r\n                                                <AccountCard fullname={accountDetails.userDetails.fullName}\r\n                                                             photo={accountDetails.userDetails.photo}/>\r\n                                            </li>\r\n                                            <li className=\"date-time\">\r\n                                                {new Date(comment.datetime).toLocaleString()}\r\n                                            </li>\r\n                                            <li className=\"text\">\r\n                                                {comment.text}\r\n                                            </li>\r\n                                        </ul>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"module-footer\">\r\n                                <textarea className=\"smarts-textarea\" placeholder=\"Comment here\"\r\n                                          ref={(ref) => this.commentText = ref}/>\r\n                                <div className=\"button-area\">\r\n                                    <button className=\"smarts-button comment-button\" onClick={this.saveComment}>\r\n                                        Add comment\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        accountDetails: state.accountDetails,\r\n        details: state.ticketDetails,\r\n        tickets: state.tickets,\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (bindActionCreators({\r\n    changeField,\r\n    addComment,\r\n    addAction,\r\n    updateTicket,\r\n    fetchTicketDetails,\r\n    reset\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TicketDetails);\r\n","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport TopMenu from \"../global/navigation/TopMenu\";\r\nimport {TICKETS_ROUTE} from \"../global/constants/routes\";\r\nimport {changeField} from \"../global/actions/StandardActions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {fetchTicketsAction} from \"../modules/tickets/actions/fetchTicketsAction\";\r\nimport TicketDetails from \"../modules/ticketDetails/views/TicketDetails\";\r\nimport {LoopCircleLoading} from \"react-loadingg\";\r\n\r\nclass TicketDetailsLayout extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {tickets, fetchTicketsAction} = this.props;\r\n        if (!tickets.isFetching && !tickets.isLoaded) {\r\n            fetchTicketsAction();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const selectedTicket = this.props.tickets.data.filter(ticket => ticket.id === this.props.match.params.id)[0];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout\">\r\n                    <div className=\"layout-header\">\r\n                        <Container>\r\n                            <TopMenu active={TICKETS_ROUTE}/>\r\n                        </Container>\r\n                    </div>\r\n                    <div className=\"layout-content\">\r\n                        <Container>\r\n                            <div className=\"layout-content__title\">\r\n                                <h3>Ticket details</h3>\r\n                            </div>\r\n                            <div className=\"layout-content__body\">\r\n                                {selectedTicket ?\r\n                                    <TicketDetails selectedTicket={selectedTicket ? selectedTicket : \"\"}/> :\r\n                                    <LoopCircleLoading/>}\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        tickets: state.tickets,\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => (bindActionCreators({\r\n    changeField,\r\n    fetchTicketsAction\r\n}, dispatch));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TicketDetailsLayout);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AuthForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"auth-form-body\">\r\n                    <div className=\"auth-form-body__item\">\r\n                        <label className=\"auth-form-body__item-label\">Email</label>\r\n                        <input type=\"text\" className=\"auth-form-body__item-input\" required/>\r\n                        <span className=\"focus-border\"> </span>\r\n                    </div>\r\n                    <div className=\"auth-form-body__item\">\r\n                        <label className=\"auth-form-body__item-label\">Password</label>\r\n                        <input type=\"password\" className=\"auth-form-body__item-input\" required/>\r\n                        <span className=\"focus-border\"> </span>\r\n                    </div>\r\n                    <div className=\"custom-control custom-checkbox \">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"auth-form-checkbox\"/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"auth-form-checkbox\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth-form-footer\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"smarts-button btn-sign-in\">Sign in</button>\r\n                    </Link>\r\n                    <span>Don't have an account? <Link to={\"/register\"}>Sign up</Link></span>\r\n                    <span>Forgot <Link to={\"/\"}>Password?</Link></span>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RegistrationForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"auth-form-body\">\r\n                    <div className=\"auth-form-body__item\">\r\n                        <label className=\"auth-form-body__item-label\">First name</label>\r\n                        <input type=\"text\" className=\"auth-form-body__item-input\" required/>\r\n                        <span className=\"focus-border\"> </span>\r\n                    </div>\r\n                    <div className=\"auth-form-body__item\">\r\n                        <label className=\"auth-form-body__item-label\">Last name</label>\r\n                        <input type=\"text\" className=\"auth-form-body__item-input\" required/>\r\n                        <span className=\"focus-border\"> </span>\r\n                    </div>\r\n                    <div className=\"auth-form-body__item\">\r\n                        <label className=\"auth-form-body__item-label\">Email</label>\r\n                        <input type=\"email\" className=\"auth-form-body__item-input\" required/>\r\n                        <span className=\"focus-border\"> </span>\r\n                    </div>\r\n                    <div className=\"auth-form-body__item\">\r\n                        <label className=\"auth-form-body__item-label\">Password</label>\r\n                        <input type=\"password\" className=\"auth-form-body__item-input\" required/>\r\n                        <span className=\"focus-border\"> </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth-form-footer\">\r\n                    <Link to=\"/authorize\">\r\n                        <button className=\"btn smarts-button btn-sign-in\">\r\n                            Sign up\r\n                        </button>\r\n                    </Link>\r\n                    <span>Already have an account ? <Link to={\"/authorize\"}>Sign up</Link></span>\r\n                    <span>Forgot <Link to={\"/\"}>Password?</Link></span>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;","import React from \"react\";\r\nimport AuthForm from \"../modules/authorization/views/Forms/AuthForm\";\r\nimport RegistrationForm from \"../modules/authorization/views/Forms/RegistrationForm\";\r\n\r\nclass AuthorizationLayout extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"auth\">\r\n                    <div className=\"auth-form\">\r\n                        <div className=\"auth-form-header\">\r\n                            <img className=\"auth-form-header__logo\" src={`${process.env.PUBLIC_URL}/img/full_logo.png`}\r\n                                 alt=\"logo\"/>\r\n                        </div>\r\n                        {this.props.hasOwnProperty(\"authForm\") ? <AuthForm/> : <RegistrationForm/>}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthorizationLayout;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {appStore} from \"./global/configurations/app-store\";\nimport {createBrowserHistory} from \"history\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport HomeLayout from \"./layouts/ProfileLayout\";\nimport TicketsLayout from \"./layouts/TicketsLayout\";\nimport ClientsLayout from \"./layouts/ClientsLayout\";\nimport InvoicesLayout from \"./layouts/InvoicesLayout\";\nimport TicketDetailsLayout from \"./layouts/TicketDetailsLayout\";\nimport AuthorizationLayout from \"./layouts/AuthorizationLayout\";\n\nexport const history = createBrowserHistory();\n\nclass Main extends React.Component {\n    render() {\n        return (\n            <div className=\"Main\">\n                <Provider store={appStore}>\n                    <Router history={history}>\n                        <Switch>\n                            <Route exact path=\"/authorize\" render={(props) => <AuthorizationLayout {...props} authForm/>}/>\n                            <Route exact path=\"/register\" render={(props) => <AuthorizationLayout {...props} />}/>\n                            <Route exact path=\"/\" component={HomeLayout}/>\n                            <Route exact path=\"/tickets\" component={TicketsLayout}/>\n                            <Route exact path=\"/tickets/details/:id\" component={TicketDetailsLayout}/>\n                            <Route exact path=\"/clients\" component={ClientsLayout}/>\n                            <Route exact path=\"/invoices\" component={InvoicesLayout}/>\n                        </Switch>\n                    </Router>\n                </Provider>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Main/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}